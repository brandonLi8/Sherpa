"use strict";import OriginalNode from"../Node/Node.min.js";import Assert from"../Assert/Assert.min.js";import ObservableVariable from"../Observe/ObservableVariable.min.js";export default class Node extends OriginalNode{constructor(t){const e={switch:!1,buttonStyle:{border:"2px solid #333",borderRadius:"4px",background:"#FFF",boxShadow:"0 0 1px 0 rgb( 40, 40, 40 )",height:"15px",width:"15px",display:"flex",justifyContent:"center",alignItems:"center"},id:null,class:null,checkStyle:{fontSize:"30px",textAlign:"center",marginLeft:"6px",marginBottom:"3px",userSelect:"none"},hoverListener:null,hoverStyle:{cursor:"pointer"},containerStyle:{width:"200px",display:"flex",flexDirection:"row",margin:"auto",alignItems:"center"},labelStyle:{fontFamily:"Courier",paddingLeft:"10px"},label:null,mouseout:null,onclick:null},n={...e,...t};n.hoverStyle={...e.hoverStyle,...t.hoverStyle},n.containerStyle={...e.containerStyle,...t.containerStyle},n.labelStyle={...e.labelStyle,...t.labelStyle},n.buttonStyle={...e.buttonStyle,...t.buttonStyle},n.checkStyle={...e.checkStyle,...t.checkStyle},super({style:n.containerStyle});var o=this;this.isSwitched=new ObservableVariable(n.switch),this.isSwitched.addListener(function(t){t?o.check.setStyle({display:""}):o.check.setStyle({display:"none"})}),this.button=new OriginalNode({style:n.buttonStyle}),this.check=new OriginalNode({text:"âœ“",style:n.checkStyle}),!0==!this.isSwitched.value&&this.check.setStyle({display:"none"}),this.button.addEventListener("mouseover",function(t){t.stopPropagation(),o.setStyle(n.hoverStyle||{}),n.hoverListener&&(Assert.assert("function"==typeof n.hoverListener,"@param listener must be a Function type. Instead it was a "+n.hoverListener.__proto__.constructor.name),n.hoverListener())}),this.button.addEventListener("mouseout",function(t){t.stopPropagation(),n.mouseout&&(Assert.assert("function"==typeof n.mouseout,"@param listener must be a Function type. Instead it was a "+n.mouseout.__proto__.constructor.name),n.mouseout()),o.button.setStyle(n.buttonStyle||{})}),this.button.addEventListener("mousedown",function(t){t.stopPropagation(),o.isSwitched.value=!o.isSwitched.value,n.onclick&&(Assert.assert("function"==typeof n.onclick,"@param listener must be a Function type. Instead it was a "+n.onclick.__proto__.constructor.name),n.onclick())}),this.button.addChildren(this.check),this.label=new OriginalNode({text:n.label,style:n.labelStyle}),this.addChildren(this.button,this.label),this.attributes=n}};