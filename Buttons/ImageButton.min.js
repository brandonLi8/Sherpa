"use strict";import OriginalNode from"../Node/Node.min.js";import Assert from"../Assert/Assert.min.js";export default class Node extends OriginalNode{constructor(t){const e={style:null,id:null,class:null,src:null,hover:null,hoverListener:null,hoverStyle:{cursor:"pointer"},mouseout:null,onclick:null,attributes:null},s={...e,...t};s.hoverStyle={...e.hoverStyle,...t.hoverStyle},super({type:"img",style:(t=s).style,src:t.src,attributes:t.attributes,id:t.id,class:t.class});var o=this;this.addEventListener("mouseover",function(e){e.stopPropagation(),o.setStyle(t.hoverStyle||{}),t.hoverListener&&(Assert.assert("function"==typeof t.hoverListener,"@param listener must be a Function type. Instead it was a "+t.hoverListener.__proto__.constructor.name),t.hoverListener()),t.hover&&(o.DOMobject.src=t.hover)}),this.addEventListener("mouseout",function(e){e.stopPropagation(),o.setStyle(t.style||{}),o.DOMobject.src=t.src,t.mouseout&&(Assert.assert("function"==typeof t.mouseout,"@param listener must be a Function type. Instead it was a "+t.mouseout.__proto__.constructor.name),t.mouseout())}),this.addEventListener("mousedown",function(e){e.stopPropagation(),t.onclick&&(Assert.assert("function"==typeof t.onclick,"@param listener must be a Function type. Instead it was a "+t.onclick.__proto__.constructor.name),t.onclick())}),this.options=t}};