"use strict";import OriginalNode from"../Node/Node.min.js";import Assert from"../Assert/Assert.min.js";export default class Node extends OriginalNode{constructor(t){let e={text:"Text Button",style:{border:"1px solid #222",margin:"auto",width:"100px",opacity:"1",fontSize:"20px"},hoverStyle:{cursor:"pointer",opacity:"0.5"},textStyle:{textAlign:"center"},textHoverStyle:null,id:null,class:null,onclick:null,hoverListener:null,mouseout:null,attributes:null,href:null};const o={...e,...t};o.style={...e.style,...t.style},o.hoverStyle={...e.hoverStyle,...t.hoverStyle},o.textStyle={...e.textStyle,...t.textStyle},super({type:"a",style:(t=o).style,attributes:t.attributes,id:t.id,class:t.class,href:t.href});var s=this;this.addEventListener("mouseover",function(e){e.stopPropagation(),s.setStyle(t.hoverStyle),s.textNode.setStyle(t.textHoverStyle),t.hoverListener&&(Assert.assert("function"==typeof t.hoverListener,"@param listener must be a Function type. Instead it was a "+t.hoverListener.__proto__.constructor.name),t.hoverListener())}),this.addEventListener("mouseout",function(e){e.stopPropagation(),s.setStyle(t.style||{}),s.textNode.setStyle(t.textStyle||{}),t.mouseout&&(Assert.assert("function"==typeof t.mouseout,"@param listener must be a Function type. Instead it was a "+t.mouseout.__proto__.constructor.name),t.mouseout())}),this.addEventListener("mousedown",function(e){e.stopPropagation(),t.onclick&&(Assert.assert("function"==typeof t.onclick,"@param listener must be a Function type. Instead it was a "+t.onclick.__proto__.constructor.name),t.onclick())}),this.textNode=new OriginalNode({text:t.text,style:t.textStyle}),this.addChildren(this.textNode),this.options=t}};