import Assert from"../Assert/Assert.min.js";export default class ObservableVariable{constructor(t,e){e&&Assert.assert("Function"===e.__proto__.constructor.name,"@param listener must be a function. Instead you provided a "+(e.__proto__.constructor.name||null)),this.listeners=[e];var s=t;Object.defineProperty(this,"value",{get:function(){return s},set:function(t){s=t;for(var e=0;e<this.listeners.length;e++)this.listeners[e]&&this.listeners[e](t)}})}toString(){return this.value?this.value.toString():this.value}addListener(t){Assert.assert(t&&"Function"===t.__proto__.constructor.name,"@param listener must be a function. Instead you provided a "+(t&&t.__proto__.constructor.name||null)),this.listeners.push(t)}removeListener(t){Assert.assert(t&&"Function"===t.__proto__.constructor.name,"@param listener must be a function. Instead you provided a "+(t&&t.__proto__.constructor.name||null)),Assert.assert(this.listeners.includes(t),"@param listener isn't a listener of this variable: "+this.toString()),this.listeners=this.listeners.filter(function(e){return e!=t})}};